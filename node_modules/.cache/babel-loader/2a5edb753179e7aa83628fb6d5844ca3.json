{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\ptama\\\\Desktop\\\\repositories\\\\ptamayo97.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var createProject = function createProject(project) {\n  return function (dispatch, getState, _ref) {\n    var getFirestore = _ref.getFirestore;\n    var firestore = getFirestore();\n    var profile = getState().firebase.profile;\n    var authorId = getState().firebase.auth.uid;\n    firestore.collection(\"projects\").add(_objectSpread({}, project)).then(function () {\n      dispatch({\n        type: \"CREATE_PROJECT_SUCCESS\"\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: \"CREATE_PROJECT_ERROR\"\n      }, err);\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\ptama\\Desktop\\repositories\\ptamayo97.github.io\\src\\store\\actions\\projectActions.js"],"names":["createProject","project","dispatch","getState","getFirestore","firestore","profile","firebase","authorId","auth","uid","collection","add","then","type","catch","err"],"mappings":";;;;;;AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,OAAO,EAAI;AACtC,SAAO,UAACC,QAAD,EAAWC,QAAX,QAA0C;AAAA,QAAnBC,YAAmB,QAAnBA,YAAmB;AAC/C,QAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,QAAME,OAAO,GAAGH,QAAQ,GAAGI,QAAX,CAAoBD,OAApC;AACA,QAAME,QAAQ,GAAGL,QAAQ,GAAGI,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C;AACAL,IAAAA,SAAS,CACNM,UADH,CACc,UADd,EAEGC,GAFH,mBAGOX,OAHP,GAKGY,IALH,CAKQ,YAAM;AACVX,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZd,MAAAA,QAAQ,CAAC;AAAEY,QAAAA,IAAI,EAAE;AAAR,OAAD,EAAmCE,GAAnC,CAAR;AACD,KAVH;AAWD,GAfD;AAgBD,CAjBM","sourcesContent":["export const createProject = project => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\" }, err);\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}